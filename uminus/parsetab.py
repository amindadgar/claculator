
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV LPAR MINUS MUL NUMBER PLUS RPARS : EE : E PLUS TE : E MINUS TE : TT : T MUL FT : T DIV FT : FF : MINUS NUMBERF : NUMBERF : LPAR E RPAR'
    
_lr_action_items = {'MINUS':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[4,9,-4,-7,-9,4,4,4,4,4,-8,9,-2,-3,-5,-6,-10,]),'NUMBER':([0,4,7,8,9,10,11,],[6,12,6,6,6,6,6,]),'LPAR':([0,7,8,9,10,11,],[7,7,7,7,7,7,]),'$end':([1,2,3,5,6,12,14,15,16,17,18,],[0,-1,-4,-7,-9,-8,-2,-3,-5,-6,-10,]),'PLUS':([2,3,5,6,12,13,14,15,16,17,18,],[8,-4,-7,-9,-8,8,-2,-3,-5,-6,-10,]),'RPAR':([3,5,6,12,13,14,15,16,17,18,],[-4,-7,-9,-8,18,-2,-3,-5,-6,-10,]),'MUL':([3,5,6,12,14,15,16,17,18,],[10,-7,-9,-8,10,10,-5,-6,-10,]),'DIV':([3,5,6,12,14,15,16,17,18,],[11,-7,-9,-8,11,11,-5,-6,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'E':([0,7,],[2,13,]),'T':([0,7,8,9,],[3,3,14,15,]),'F':([0,7,8,9,10,11,],[5,5,5,5,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> E','S',1,'p_S','plus_minus_multiply_devide_uminus.py',18),
  ('E -> E PLUS T','E',3,'p_E_plus_T','plus_minus_multiply_devide_uminus.py',21),
  ('E -> E MINUS T','E',3,'p_E_MINUS_T','plus_minus_multiply_devide_uminus.py',25),
  ('E -> T','E',1,'p_E_T','plus_minus_multiply_devide_uminus.py',40),
  ('T -> T MUL F','T',3,'p_T_MUL_F','plus_minus_multiply_devide_uminus.py',44),
  ('T -> T DIV F','T',3,'p_T_DIV_F','plus_minus_multiply_devide_uminus.py',54),
  ('T -> F','T',1,'p_T_F','plus_minus_multiply_devide_uminus.py',66),
  ('F -> MINUS NUMBER','F',2,'p_F_MINUS_a','plus_minus_multiply_devide_uminus.py',71),
  ('F -> NUMBER','F',1,'p_F_a','plus_minus_multiply_devide_uminus.py',78),
  ('F -> LPAR E RPAR','F',3,'p_F_lpar_E_rpar','plus_minus_multiply_devide_uminus.py',82),
]
