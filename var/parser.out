Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> U
Rule 2     U -> NAME ASSIGN E
Rule 3     A -> NAME
Rule 4     S -> E
Rule 5     E -> E PLUS T
Rule 6     E -> E MINUS T
Rule 7     E -> T
Rule 8     T -> T MUL F
Rule 9     T -> T DIV F
Rule 10    T -> F
Rule 11    A -> MINUS NUMBER
Rule 12    F -> F POWER A
Rule 13    F -> A
Rule 14    A -> NUMBER
Rule 15    A -> LPAR E RPAR

Terminals, with rules where they appear

ASSIGN               : 2
DIV                  : 9
LPAR                 : 15
MINUS                : 6 11
MUL                  : 8
NAME                 : 2 3
NUMBER               : 11 14
PLUS                 : 5
POWER                : 12
RPAR                 : 15
error                : 

Nonterminals, with rules where they appear

A                    : 12 13
E                    : 2 4 5 6 15
F                    : 8 9 10 12
S                    : 0
T                    : 5 6 7 8 9
U                    : 1

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . U
    (4) S -> . E
    (2) U -> . NAME ASSIGN E
    (5) E -> . E PLUS T
    (6) E -> . E MINUS T
    (7) E -> . T
    (8) T -> . T MUL F
    (9) T -> . T DIV F
    (10) T -> . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 4
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    S                              shift and go to state 1
    U                              shift and go to state 2
    E                              shift and go to state 3
    T                              shift and go to state 5
    F                              shift and go to state 7
    A                              shift and go to state 8

state 1

    (0) S' -> S .



state 2

    (1) S -> U .

    $end            reduce using rule 1 (S -> U .)


state 3

    (4) S -> E .
    (5) E -> E . PLUS T
    (6) E -> E . MINUS T

    $end            reduce using rule 4 (S -> E .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12


state 4

    (2) U -> NAME . ASSIGN E
    (3) A -> NAME .

    ASSIGN          shift and go to state 13
    POWER           reduce using rule 3 (A -> NAME .)
    MUL             reduce using rule 3 (A -> NAME .)
    DIV             reduce using rule 3 (A -> NAME .)
    PLUS            reduce using rule 3 (A -> NAME .)
    MINUS           reduce using rule 3 (A -> NAME .)
    $end            reduce using rule 3 (A -> NAME .)


state 5

    (7) E -> T .
    (8) T -> T . MUL F
    (9) T -> T . DIV F

    PLUS            reduce using rule 7 (E -> T .)
    MINUS           reduce using rule 7 (E -> T .)
    $end            reduce using rule 7 (E -> T .)
    RPAR            reduce using rule 7 (E -> T .)
    MUL             shift and go to state 14
    DIV             shift and go to state 15


state 6

    (11) A -> MINUS . NUMBER

    NUMBER          shift and go to state 16


state 7

    (10) T -> F .
    (12) F -> F . POWER A

    MUL             reduce using rule 10 (T -> F .)
    DIV             reduce using rule 10 (T -> F .)
    PLUS            reduce using rule 10 (T -> F .)
    MINUS           reduce using rule 10 (T -> F .)
    $end            reduce using rule 10 (T -> F .)
    RPAR            reduce using rule 10 (T -> F .)
    POWER           shift and go to state 17


state 8

    (13) F -> A .

    POWER           reduce using rule 13 (F -> A .)
    MUL             reduce using rule 13 (F -> A .)
    DIV             reduce using rule 13 (F -> A .)
    PLUS            reduce using rule 13 (F -> A .)
    MINUS           reduce using rule 13 (F -> A .)
    $end            reduce using rule 13 (F -> A .)
    RPAR            reduce using rule 13 (F -> A .)


state 9

    (14) A -> NUMBER .

    POWER           reduce using rule 14 (A -> NUMBER .)
    MUL             reduce using rule 14 (A -> NUMBER .)
    DIV             reduce using rule 14 (A -> NUMBER .)
    PLUS            reduce using rule 14 (A -> NUMBER .)
    MINUS           reduce using rule 14 (A -> NUMBER .)
    $end            reduce using rule 14 (A -> NUMBER .)
    RPAR            reduce using rule 14 (A -> NUMBER .)


state 10

    (15) A -> LPAR . E RPAR
    (5) E -> . E PLUS T
    (6) E -> . E MINUS T
    (7) E -> . T
    (8) T -> . T MUL F
    (9) T -> . T DIV F
    (10) T -> . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    E                              shift and go to state 18
    T                              shift and go to state 5
    F                              shift and go to state 7
    A                              shift and go to state 8

state 11

    (5) E -> E PLUS . T
    (8) T -> . T MUL F
    (9) T -> . T DIV F
    (10) T -> . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    T                              shift and go to state 20
    F                              shift and go to state 7
    A                              shift and go to state 8

state 12

    (6) E -> E MINUS . T
    (8) T -> . T MUL F
    (9) T -> . T DIV F
    (10) T -> . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    T                              shift and go to state 21
    F                              shift and go to state 7
    A                              shift and go to state 8

state 13

    (2) U -> NAME ASSIGN . E
    (5) E -> . E PLUS T
    (6) E -> . E MINUS T
    (7) E -> . T
    (8) T -> . T MUL F
    (9) T -> . T DIV F
    (10) T -> . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    E                              shift and go to state 22
    T                              shift and go to state 5
    F                              shift and go to state 7
    A                              shift and go to state 8

state 14

    (8) T -> T MUL . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    F                              shift and go to state 23
    A                              shift and go to state 8

state 15

    (9) T -> T DIV . F
    (12) F -> . F POWER A
    (13) F -> . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    F                              shift and go to state 24
    A                              shift and go to state 8

state 16

    (11) A -> MINUS NUMBER .

    POWER           reduce using rule 11 (A -> MINUS NUMBER .)
    MUL             reduce using rule 11 (A -> MINUS NUMBER .)
    DIV             reduce using rule 11 (A -> MINUS NUMBER .)
    PLUS            reduce using rule 11 (A -> MINUS NUMBER .)
    MINUS           reduce using rule 11 (A -> MINUS NUMBER .)
    $end            reduce using rule 11 (A -> MINUS NUMBER .)
    RPAR            reduce using rule 11 (A -> MINUS NUMBER .)


state 17

    (12) F -> F POWER . A
    (3) A -> . NAME
    (11) A -> . MINUS NUMBER
    (14) A -> . NUMBER
    (15) A -> . LPAR E RPAR

    NAME            shift and go to state 19
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 9
    LPAR            shift and go to state 10

    A                              shift and go to state 25

state 18

    (15) A -> LPAR E . RPAR
    (5) E -> E . PLUS T
    (6) E -> E . MINUS T

    RPAR            shift and go to state 26
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12


state 19

    (3) A -> NAME .

    POWER           reduce using rule 3 (A -> NAME .)
    MUL             reduce using rule 3 (A -> NAME .)
    DIV             reduce using rule 3 (A -> NAME .)
    RPAR            reduce using rule 3 (A -> NAME .)
    PLUS            reduce using rule 3 (A -> NAME .)
    MINUS           reduce using rule 3 (A -> NAME .)
    $end            reduce using rule 3 (A -> NAME .)


state 20

    (5) E -> E PLUS T .
    (8) T -> T . MUL F
    (9) T -> T . DIV F

    PLUS            reduce using rule 5 (E -> E PLUS T .)
    MINUS           reduce using rule 5 (E -> E PLUS T .)
    $end            reduce using rule 5 (E -> E PLUS T .)
    RPAR            reduce using rule 5 (E -> E PLUS T .)
    MUL             shift and go to state 14
    DIV             shift and go to state 15


state 21

    (6) E -> E MINUS T .
    (8) T -> T . MUL F
    (9) T -> T . DIV F

    PLUS            reduce using rule 6 (E -> E MINUS T .)
    MINUS           reduce using rule 6 (E -> E MINUS T .)
    $end            reduce using rule 6 (E -> E MINUS T .)
    RPAR            reduce using rule 6 (E -> E MINUS T .)
    MUL             shift and go to state 14
    DIV             shift and go to state 15


state 22

    (2) U -> NAME ASSIGN E .
    (5) E -> E . PLUS T
    (6) E -> E . MINUS T

    $end            reduce using rule 2 (U -> NAME ASSIGN E .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12


state 23

    (8) T -> T MUL F .
    (12) F -> F . POWER A

    MUL             reduce using rule 8 (T -> T MUL F .)
    DIV             reduce using rule 8 (T -> T MUL F .)
    PLUS            reduce using rule 8 (T -> T MUL F .)
    MINUS           reduce using rule 8 (T -> T MUL F .)
    $end            reduce using rule 8 (T -> T MUL F .)
    RPAR            reduce using rule 8 (T -> T MUL F .)
    POWER           shift and go to state 17


state 24

    (9) T -> T DIV F .
    (12) F -> F . POWER A

    MUL             reduce using rule 9 (T -> T DIV F .)
    DIV             reduce using rule 9 (T -> T DIV F .)
    PLUS            reduce using rule 9 (T -> T DIV F .)
    MINUS           reduce using rule 9 (T -> T DIV F .)
    $end            reduce using rule 9 (T -> T DIV F .)
    RPAR            reduce using rule 9 (T -> T DIV F .)
    POWER           shift and go to state 17


state 25

    (12) F -> F POWER A .

    POWER           reduce using rule 12 (F -> F POWER A .)
    MUL             reduce using rule 12 (F -> F POWER A .)
    DIV             reduce using rule 12 (F -> F POWER A .)
    PLUS            reduce using rule 12 (F -> F POWER A .)
    MINUS           reduce using rule 12 (F -> F POWER A .)
    $end            reduce using rule 12 (F -> F POWER A .)
    RPAR            reduce using rule 12 (F -> F POWER A .)


state 26

    (15) A -> LPAR E RPAR .

    POWER           reduce using rule 15 (A -> LPAR E RPAR .)
    MUL             reduce using rule 15 (A -> LPAR E RPAR .)
    DIV             reduce using rule 15 (A -> LPAR E RPAR .)
    PLUS            reduce using rule 15 (A -> LPAR E RPAR .)
    MINUS           reduce using rule 15 (A -> LPAR E RPAR .)
    $end            reduce using rule 15 (A -> LPAR E RPAR .)
    RPAR            reduce using rule 15 (A -> LPAR E RPAR .)

